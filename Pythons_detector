# phishing_detector.py

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import Pipeline
import joblib

# Sample data (you can replace this with a CSV file if available)
data = {
    "message": [
        "Update your account info immediately",
        "You have won $10,000 dollars!",
        "Meeting at 2 PM tomorrow",
        "Verify your bank account now",
        "Lunch at 1 PM",
        "Click this link to claim your prize",
        "Letâ€™s catch up tomorrow",
        "Urgent: Your account is at risk",
        "Schedule for next week confirmed"
    ],
    "label": [
        "phishing", "phishing", "not_phishing", "phishing",
        "not_phishing", "phishing", "not_phishing", "phishing", "not_phishing"
    ]
}

df = pd.DataFrame(data)

# Convert labels to binary
df['label'] = df['label'].map({'phishing': 1, 'not_phishing': 0})

# Split the data
X_train, X_test, y_train, y_test = train_test_split(df['message'], df['label'], test_size=0.2, random_state=42)

# Build the model pipeline
model = Pipeline([
    ('tfidf', TfidfVectorizer()),
    ('clf', MultinomialNB())
])

# Train the model
model.fit(X_train, y_train)

# Save the model
joblib.dump(model, 'phishing_model.pkl')

print("Model trained and saved successfully.") 
